{"version":3,"sources":["src/app/home/home.page.html","src/app/home/home.module.ts","src/app/home/home.page.scss","src/app/home/home.page.ts","src/app/services/api.service.ts","src/app/services/network.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-title>\\n      News Feeds\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">News Feeds</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let item of articles\\\" (click)=\\\"gotoDetails(item)\\\">\\n      <ion-thumbnail slot=\\\"start\\\">\\n        <ion-img [src]=\\\"item.urlToImage\\\"></ion-img>\\n      </ion-thumbnail>\\n      <ion-label class=\\\"ion-text-wrap\\\">{{item.title}}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","export default \"ion-title {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9EOlxcd29ya1xcbmV3cy1mZWVkcy9zcmNcXGFwcFxcaG9tZVxcaG9tZS5wYWdlLnNjc3MiLCJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi10aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiIsImlvbi10aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { ApiService } from '../services/api.service';\r\nimport { Router,NavigationExtras } from '@angular/router';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: ['home.page.scss'],\r\n})\r\nexport class HomePage {\r\n  articles:[];\r\n  constructor(private apiService: ApiService, private router: Router) {\r\n  }\r\n  ionViewDidEnter(){\r\n\r\n    this.apiService.getNews().subscribe((data)=>{\r\n      this.articles = data['articles'];\r\n    });\r\n  }\r\n\r\n  gotoDetails(article:object){\r\n    let navigationExtras: NavigationExtras = {\r\n      state: {\r\n        article: article\r\n      }\r\n    };\r\n    this.router.navigate(['/details'],navigationExtras);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NetworkService, ConnectionStatus } from './network.service';\r\nimport { Storage } from '@ionic/storage';\r\nimport { from } from 'rxjs';\r\nimport { tap } from \"rxjs/operators\";\r\nconst API_STORAGE_KEY = 'news';\r\nconst API_KEY=\"f34ce61c4978483c92a78f8d655c05c1\";\r\nconst API_URL=\"https://newsapi.org/v2/top-headlines\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private httpClient: HttpClient,private storage: Storage,private networkService: NetworkService) { }\r\n  \r\n  getNews(){\r\n    if (this.networkService.getCurrentNetworkStatus() == ConnectionStatus.Offline) {\r\n      // Return the cached data from Storage\r\n      return from(this.getLocalData('feeds'));\r\n    }else{\r\n      return this.httpClient.get(`${API_URL}?sources=techcrunch&apiKey=${API_KEY}`).pipe(\r\n        tap(res => {\r\n          this.setLocalData('feeds', res);\r\n        })\r\n      )\r\n    }\r\n    \r\n  }\r\n  // Save result of API requests\r\n  private setLocalData(key, data) {\r\n    this.storage.set(`${API_STORAGE_KEY}-${key}`, data);\r\n  }\r\n \r\n  // Get cached API result\r\n  private getLocalData(key) {\r\n    return this.storage.get(`${API_STORAGE_KEY}-${key}`);\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { Network } from '@ionic-native/network/ngx'\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ToastController, Platform } from '@ionic/angular';\n \nexport enum ConnectionStatus {\n  Online,\n  Offline\n}\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class NetworkService {\n \n  private status: BehaviorSubject<ConnectionStatus> = new BehaviorSubject(ConnectionStatus.Offline);\n \n  constructor(private network: Network, private toastController: ToastController, private plt: Platform) {\n    this.plt.ready().then(() => {\n      this.initializeNetworkEvents();\n      let status =  this.network.type !== 'none' ? ConnectionStatus.Online : ConnectionStatus.Offline;\n      this.status.next(status);\n    });\n  }\n \n  public initializeNetworkEvents() {\n \n    this.network.onDisconnect().subscribe(() => {\n      if (this.status.getValue() === ConnectionStatus.Online) {\n        console.log('WE ARE OFFLINE');\n        this.updateNetworkStatus(ConnectionStatus.Offline);\n      }\n    });\n \n    this.network.onConnect().subscribe(() => {\n      if (this.status.getValue() === ConnectionStatus.Offline) {\n        console.log('WE ARE ONLINE');\n        this.updateNetworkStatus(ConnectionStatus.Online);\n      }\n    });\n  }\n \n  private async updateNetworkStatus(status: ConnectionStatus) {\n    this.status.next(status);\n \n    let connection = status == ConnectionStatus.Offline ? 'Offline' : 'Online';\n    let toast = this.toastController.create({\n      message: `You are now ${connection}`,\n      duration: 3000,\n      position: 'bottom'\n    });\n    toast.then(toast => toast.present());\n  }\n \n  public onNetworkChange(): Observable<ConnectionStatus> {\n    return this.status.asObservable();\n  }\n \n  public getCurrentNetworkStatus(): ConnectionStatus {\n    return this.status.getValue();\n  }\n}"],"sourceRoot":"webpack:///","file":"home-home-module-es5.js"}